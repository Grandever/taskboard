// Common interfaces used across the application

export interface BaseEntity {
  id: string;
  created_at: string;
  updated_at: string;
}

export interface PaginationParams {
  page: number;
  size: number;
  total?: number;
}

export interface SortParams {
  field: string;
  direction: 'asc' | 'desc';
}

export interface ApiResponse<T> {
  success: boolean;
  data?: T;
  message?: string;
  error?: string;
  pagination?: PaginationParams;
}

export interface BulkOperationResult {
  success: boolean;
  affectedIds: string[];
  errors?: Array<{ id: string; error: string }>;
  message?: string;
}

export interface NotificationData {
  id: string;
  type: 'success' | 'error' | 'warning' | 'info';
  title: string;
  message: string;
  timestamp: Date;
  read: boolean;
  actionUrl?: string;
}

export interface AuditLogEntry {
  id: string;
  action: 'create' | 'update' | 'delete' | 'restore' | 'move' | 'assign';
  entityType: 'task' | 'user' | 'settings';
  entityId: string;
  userId?: string;
  timestamp: Date;
  changes?: Record<string, { old: any; new: any }>;
  metadata?: Record<string, any>;
}

export interface ExportFormat {
  id: string;
  name: string;
  extension: string;
  mimeType: string;
  description: string;
}

export interface ImportResult {
  success: boolean;
  imported: number;
  skipped: number;
  errors: Array<{ row: number; error: string }>;
  message?: string;
}

export interface BackupMetadata {
  id: string;
  timestamp: Date;
  version: string;
  size: number;
  description?: string;
  autoGenerated: boolean;
}

export interface PerformanceMetrics {
  loadTime: number;
  renderTime: number;
  memoryUsage: number;
  timestamp: Date;
}

export interface UserSession {
  id: string;
  userId: string;
  startTime: Date;
  lastActivity: Date;
  userAgent: string;
  ipAddress?: string;
  active: boolean;
}
